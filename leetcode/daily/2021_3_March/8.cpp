/****************************************************
Date: March 8th

link: https://leetcode.com/explore/challenge/card/march-leetcoding-challenge-2021/589/week-2-march-8th-march-14th/3665/
****************************************************/

#include <iostream>
#include <vector>
#include <list>
#include <algorithm>
#include <string>
#include <stack>
#include <queue>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <cmath>
#include <limits.h>

using namespace std;

/*
  Q: Remove Palindromic Subsequences

  Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.
  Return the minimum number of steps to make the given string empty.
  A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.
  A string is called palindrome if is one that reads the same backward as well as forward.

  Example 1:
    Input: s = "ababa"
    Output: 1
    Explanation: 
      String is already palindrome

  Example 2:
    Input: s = "abb"
    Output: 2
    Explanation: 
      "abb" -> "bb" -> "". 
      Remove palindromic subsequence "a" then "bb".

  Example 3:
    Input: s = "baabb"
    Output: 2
    Explanation:
      "baabb" -> "b" -> "". 
      Remove palindromic subsequence "baab" then "b".

  Example 4:
    Input: s = ""
    Output: 0

  Constraints:
    0 <= s.length <= 1000
    s only consists of letters 'a' and 'b'

  Hide Hint #1  
    Use the fact that string contains only 2 characters.
  Hide Hint #2  
    Are subsequences composed of only one type of letter always palindrome strings ?
*/
class Solution 
{
public:
  int removePalindromeSub(string s) 
  {
    string str = s;
    reverse(str.begin(), str.end());
    
    return s.empty() ? 0 : ((str == s) ? 1 : 2);
  }
};